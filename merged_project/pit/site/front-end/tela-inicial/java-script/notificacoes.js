let mealReminders = [];
let waterInterval = null;
let notificationsEnabled = false;

// Verifica suporte a notifica√ß√µes
if (!("Notification" in window)) {
    alert("Seu navegador n√£o suporta notifica√ß√µes!");
}

// Event Listeners
document.getElementById('addMealBtn').addEventListener('click', addMealReminder);
document.getElementById('enableBtn').addEventListener('click', enableNotifications);
document.getElementById('waterInterval').addEventListener('change', updateWaterReminder);

function addMealReminder() {
    const timeInput = document.getElementById('mealTime');
    const time = timeInput.value;
    
    if (!time) {
        alert('Selecione um hor√°rio!');
        return;
    }
    
    if (mealReminders.includes(time)) {
        alert('Este hor√°rio j√° foi adicionado!');
        return;
    }
    
    mealReminders.push(time);
    mealReminders.sort();
    updateMealList();
    timeInput.value = ''; // Limpa o campo ap√≥s adicionar
}

function removeMealReminder(time) {
    mealReminders = mealReminders.filter(t => t !== time);
    updateMealList();
}

function updateMealList() {
    const list = document.getElementById('mealList');
    
    if (mealReminders.length === 0) {
        list.innerHTML = '<p style="color: #999; text-align: center;">Nenhum lembrete configurado</p>';
        return;
    }
    
    list.innerHTML = mealReminders.map(time => `
        <div class="reminder-item">
            <span class="reminder-time">${time}</span>
            <button class="btn-remove" onclick="removeMealReminder('${time}')">Remover</button>
        </div>
    `).join('');
}

function enableNotifications() {
    if (Notification.permission === "granted") {
        startReminders();
    } else if (Notification.permission !== "denied") {
        Notification.requestPermission().then(permission => {
            if (permission === "granted") {
                startReminders();
            } else {
                alert('Permiss√£o de notifica√ß√£o negada!');
            }
        });
    } else {
        alert('Notifica√ß√µes bloqueadas! Ative nas configura√ß√µes do navegador.');
    }
}

function startReminders() {
    notificationsEnabled = true;
    document.getElementById('status').className = 'status active';
    document.getElementById('status').textContent = 'Notifica√ß√µes ativadas ‚úì';
    document.getElementById('enableBtn').disabled = true;

    // Notifica√ß√£o de teste
    if (Notification.permission === "granted") {
        new Notification('Lembretes Ativados!', {
            body: 'Voc√™ receber√° notifica√ß√µes nos hor√°rios configurados.',
            icon: 'üíö'
        });
    }

    // Inicia verifica√ß√£o de refei√ß√µes
    checkMealReminders();
    setInterval(checkMealReminders, 60000); // Verifica a cada minuto

    // Inicia lembrete de √°gua
    startWaterReminder();
}

function checkMealReminders() {
    if (!notificationsEnabled || Notification.permission !== "granted") return;
    
    const now = new Date();
    const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;
    
    if (mealReminders.includes(currentTime)) {
        new Notification('üçΩÔ∏è Hora de Comer!', {
            body: 'N√£o se esque√ßa de fazer sua refei√ß√£o!',
            icon: 'üçΩÔ∏è',
            requireInteraction: true
        });
    }
}

function startWaterReminder() {
    const intervalMinutes = parseInt(document.getElementById('waterInterval').value) || 60;
    
    if (waterInterval) {
        clearInterval(waterInterval);
    }
    
    waterInterval = setInterval(() => {
        if (notificationsEnabled && Notification.permission === "granted") {
            new Notification('üíß Beba √Ågua!', {
                body: 'Hora de se hidratar! Beba um copo de √°gua.',
                icon: 'üíß',
                requireInteraction: true
            });
        }
    }, intervalMinutes * 60000);
    
    updateWaterStatus(intervalMinutes);
}

function updateWaterReminder() {
    if (notificationsEnabled) {
        startWaterReminder();
    }
}

function updateWaterStatus(intervalMinutes) {
    document.getElementById('waterStatus').innerHTML = 
        `<p style="color: #28a745; text-align: center; font-weight: 600;">
            Ativo: notifica√ß√£o a cada ${intervalMinutes} minuto${intervalMinutes !== 1 ? 's' : ''}
        </p>`;
}

// Fun√ß√£o para desativar notifica√ß√µes (opcional)
function disableNotifications() {
    notificationsEnabled = false;
    if (waterInterval) {
        clearInterval(waterInterval);
        waterInterval = null;
    }
    document.getElementById('status').className = 'status';
    document.getElementById('status').textContent = 'Notifica√ß√µes desativadas';
    document.getElementById('enableBtn').disabled = false;
    document.getElementById('waterStatus').innerHTML = 
        '<p style="color: #999; text-align: center;">Lembretes de √°gua desativados</p>';
}